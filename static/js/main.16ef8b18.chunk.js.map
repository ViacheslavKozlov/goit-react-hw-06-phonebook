{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.module.css","Components/PhonebookList/PhonebookList.module.css","Components/PhonebookSearch/PhonebookSearch.module.css","Components/PhonebookHeadline/PhonebookHeadline.module.css","Components/PhonebookListHeadline/PhonebookListHeadline.module.css","Components/PhonebookForm/PhonebookForm.js","Components/PhonebookHeadline/PhonebookHeadline.js","Components/PhonebookList/PhonebookList.js","Components/PhonebookListHeadline/PhonebookListHeadline.js","Components/PhonebookSearch/PhonebookSearch.js","Components/App.js","index.js"],"names":["module","exports","PhonebookForm","onSubmit","useState","setId","name","setName","number","setNumber","handleChange","evt","target","value","className","style","formWarpper","preventDefault","formInputWarpper","lableName","htmlFor","inputField","type","autoComplete","onChange","pattern","title","required","formBtn","defaultPops","id","PhonebookHeadline","phonebookHeadline","PhonebookList","contacts","onDeleteContact","listWrapper","map","contact","listItem","listItemdData","href","listItemBtn","onClick","PhonebookListHeadline","phonebookListHeadline","PhonebookSearch","searchLabel","App","setContacts","filter","setFilter","useEffect","storedContacts","localStorage","getItem","parsedStoredContacts","JSON","parse","setItem","stringify","newContact","uuidv4","some","toLocaleLowerCase","alert","prevState","currentTarget","normalizedInput","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16ef8b18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWarpper\":\"PhonebookForm_formWarpper__oRuB6\",\"formInputWarpper\":\"PhonebookForm_formInputWarpper__2nj9T\",\"lableName\":\"PhonebookForm_lableName__1O-rh\",\"inputField\":\"PhonebookForm_inputField__1eQgy\",\"formBtn\":\"PhonebookForm_formBtn__3YbuP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"PhonebookList_listWrapper__37B2H\",\"listItem\":\"PhonebookList_listItem__25aoD\",\"listItemdData\":\"PhonebookList_listItemdData__1J2fK\",\"listItemBtn\":\"PhonebookList_listItemBtn__1KPyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchLabel\":\"PhonebookSearch_searchLabel__1hBcI\",\"formWarpper\":\"PhonebookSearch_formWarpper__2PpnA\",\"inputField\":\"PhonebookSearch_inputField__2uFOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookHeadline\":\"PhonebookHeadline_phonebookHeadline__39_Sj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookListHeadline\":\"PhonebookListHeadline_phonebookListHeadline__1tNls\"};","import { useState } from \"react\";\nimport style from \"./PhonebookForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function PhonebookForm({ onSubmit }) {\n  // eslint-disable-next-line no-unused-vars\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setId(\"\");\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={style.formWarpper} onSubmit={handleSubmit}>\n      <div className={style.formInputWarpper}>\n        <label className={style.lableName} htmlFor=\"name\">\n          Name\n          <input\n            className={style.inputField}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            autoComplete=\"off\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n      </div>\n      <div className={style.formInputWarpper}>\n        <label className={style.lableName} htmlFor=\"number\">\n          Number\n          <input\n            className={style.inputField}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            autoComplete=\"off\"\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n      <button className={style.formBtn} type=\"submit\">\n        Add contact to phonebook\n      </button>\n    </form>\n  );\n}\n\nPhonebookForm.defaultPops = {\n  id: \"\",\n  name: \"\",\n  number: \"\"\n};\n\nPhonebookForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookHeadline.module.css\";\n\nconst PhonebookHeadline = ({ title }) => {\n  return <h3 className={style.phonebookHeadline}>{title}</h3>;\n};\n\nPhonebookHeadline.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PhonebookHeadline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookList.module.css\";\n\nconst PhonebookList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <ul className={style.listWrapper}>\n        {contacts.map(contact => (\n          <li className={style.listItem} key={contact.id}>\n            <span className={style.listItemdData}>\n              {contact.name}: <a href=\"tel:+{contact.number}\">{contact.number}</a>\n            </span>\n            <button className={style.listItemBtn} type=\"button\" onClick={() => onDeleteContact(contact.id)}>\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default PhonebookList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookListHeadline.module.css\";\n\nconst PhonebookListHeadline = ({ title }) => {\n  return <h3 className={style.phonebookListHeadline}>{title}</h3>;\n};\n\nPhonebookListHeadline.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PhonebookListHeadline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookSearch.module.css\";\n\nconst PhonebookSearch = ({ value, onChange }) => {\n  return (\n    <div className={style.formWarpper}>\n      <label className={style.searchLabel}>\n        Find contact by name\n        <input\n          className={style.inputField}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nPhonebookSearch.defaultPops = {\n  value: \"\"\n};\n\nPhonebookSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default PhonebookSearch;\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PhonebookForm from \"./PhonebookForm/PhonebookForm\";\nimport PhonebookHeadline from \"./PhonebookHeadline/PhonebookHeadline\";\nimport PhonebookList from \"./PhonebookList/PhonebookList\";\nimport PhonebookListHeadline from \"./PhonebookListHeadline/PhonebookListHeadline\";\nimport PhonebookSearch from \"./PhonebookSearch/PhonebookSearch\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Darth Vader\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Luke Skywalker\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"ObiWan Kenobi\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"R2 D2\", number: \"227-91-26\" },\n    { id: \"id-5\", name: \"Padme Amidala\", number: \"123-34-67\" },\n    { id: \"id-6\", name: \"Darth Sidius\", number: \"467-54-34\" },\n    { id: \"id-7\", name: \"QuaiGon Jinn\", number: \"789-23-45\" },\n    { id: \"id-8\", name: \"Boba Fett\", number: \"274-45-09\" }\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const storedContacts = localStorage.getItem(\"contacts\");\n    const parsedStoredContacts = JSON.parse(storedContacts);\n    parsedStoredContacts && setContacts(parsedStoredContacts);\n  }, []);\n\n  useEffect(\n    () => {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    },\n    [contacts]\n  );\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number\n    };\n\n    contacts.some(contact => contact.name.toLocaleLowerCase() === newContact.name.toLocaleLowerCase())\n      ? alert(`${newContact.name} is alredy exist`)\n      : setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const onChangeFilter = evt => setFilter(evt.currentTarget.value);\n\n  const filterContacts = () => {\n    const normalizedInput = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(normalizedInput));\n  };\n\n  const deleteContact = id => setContacts(prevState => prevState.filter(contact => contact.id !== id));\n\n  return (\n    <>\n      <PhonebookHeadline title=\"Phonebook\" />\n      <PhonebookForm onSubmit={addContact} />\n      <PhonebookListHeadline title=\"Contacts\" />\n      <PhonebookSearch value={filter} onChange={onChangeFilter} />\n      <PhonebookList contacts={filterContacts()} onDeleteContact={deleteContact} />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}